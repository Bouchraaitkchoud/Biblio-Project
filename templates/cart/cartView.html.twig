{% extends 'base.html.twig' %}

{% block stylesheets %}
    <style>
        :root {
            --primary: #117986;
            --light: #ffffff;
            --dark: #000000;
        }

        /* Button Styles */
        .btn-primary-custom {
            background-color: var(--primary);
            color: var(--light);
            border: none;
        }

        .btn-primary-custom:hover {
            background-color: #0e606d;
        }

        .btn-outline-primary-custom {
            color: var(--primary);
            border: 1px solid var(--primary);
            background-color: var(--light);
        }

        .btn-outline-primary-custom:hover {
            background-color: var(--primary);
            color: var(--light);
        }

        /* Card Styles */
        .card-custom {
            border: 1px solid #dee2e6;
            border-radius: 0.5rem;
            box-shadow: 0 1px 3px rgba(0,0,0,0.05);
        }

        .text-primary-custom {
            color: var(--primary);
        }

        .empty-cart {
            height: 65vh;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .empty-cart-icon {
            font-size: 4rem;
        }

        /* Ensure a consistent layout */
        .cart-container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .cart-content {
            width: 100%;
            max-width: 800px;
        }

        .hidden {
            display: none;
        }
    </style>
{% endblock %}

{% block title %}My Cart{% endblock %}

{% block body %}
    <div class="container py-5 cart-container">
        <h1 class="mb-4 text-center text-primary-custom">ðŸ›’ My Cart</h1>
        <div class="cart-content">
            {% if items|length > 0 %}
                <div class="row g-3 mb-4">
                    {% for item in items %}
                        <div class="col-12">
                            <div class="card card-custom p-3">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="book-info">
                                        <h5 class="book-title">{{ item.getBook().getTitle() }}</h5>
                                        <p class="book-author mb-0">by {{ item.getBook().getAuthorName() }}</p>
                                        <p class="book-barcode mb-0">Barcode: {{ item.getBarcode() }}</p>
                                    </div>
                                    <div class="book-actions">
                                        <form action="{{ path('remove_from_cart', {'id': item.getBook().getId()}) }}" method="POST" class="d-inline">
                                            <input type="hidden" name="_token" value="{{ csrf_token('remove_from_cart') }}">
                                            <button type="submit" class="btn btn-danger btn-sm">
                                                <i class="fas fa-trash"></i> Remove
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
                <div class="text-center">
                    <form action="{{ path('submit_cart') }}" method="POST" class="d-inline">
                        <input type="hidden" name="_token" value="{{ csrf_token('submit_cart') }}">
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="fas fa-check"></i> Submit Request
                        </button>
                    </form>
                </div>
            {% else %}
                <div class="text-center">
                    <p class="text-muted">Your cart is empty</p>
                    <a href="{{ path('book_index') }}" class="btn btn-primary">
                        <i class="fas fa-book"></i> Browse Books
                    </a>
                </div>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form[action="{{ path('submit_cart') }}"]');
        
        if (form) {
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const submitButton = form.querySelector('button[type="submit"]');
                submitButton.disabled = true;
                submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
                
                fetch(form.action, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    credentials: 'include'
                })
                .then(response => {
                    if (response.headers.get('content-type')?.includes('application/pdf')) {
                        // Handle PDF response
                        return response.blob().then(blob => {
                            const url = window.URL.createObjectURL(blob);
                            const a = document.createElement('a');
                            a.href = url;
                            a.download = 'request_receipt.pdf';
                            document.body.appendChild(a);
                            a.click();
                            window.URL.revokeObjectURL(url);
                            a.remove();
                            
                            // Redirect to home page after download
                            window.location.href = '{{ path('app_domains') }}';
                        });
                    } else {
                        // Handle JSON response (error case)
                        return response.json().then(data => {
                            throw new Error(data.message || 'An error occurred');
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert(error.message || 'An unexpected error occurred. Please try again.');
                    submitButton.disabled = false;
                    submitButton.innerHTML = '<i class="fas fa-check"></i> Submit Request';
                });
            });
        }
    });
</script>
{% endblock %}
