{% extends 'base.html.twig' %}

{% block stylesheets %}
    <style>
        html, body {
            background: #fdfaf5 !important;
        }
        .cart-container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .cart-content {
            width: 100%;
            max-width: 900px;
        }
        .cart-title {
            font-size: 2.5rem;
            font-family: 'Georgia', serif;
            color: #1a2e4f;
            font-weight: bold;
            margin-bottom: 2.2rem;
            text-align: center;
        }
        .cart-card {
            background: #fff;
            border-left: 4px solid #b2903e;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.06);
            margin-bottom: 1.5rem;
            padding: 1.5rem 1.2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .cart-book-info {
            flex: 1;
        }
        .cart-book-title {
            font-size: 1.25rem;
            font-family: 'Georgia', serif;
            color: #1a2e4f;
            font-weight: bold;
            margin-bottom: 0.2rem;
        }
        .cart-book-author {
            color: #7a6b52;
            font-size: 1rem;
            margin-bottom: 0.2rem;
        }
        .cart-book-barcode {
            color: #4e4a45;
            font-size: 0.95rem;
        }
        .remove-btn {
            background: #fff;
            color: #b2903e;
            border: 1.5px solid #b2903e;
            border-radius: 6px;
            padding: 0.5rem 1.1rem;
            font-size: 1rem;
            font-family: 'Georgia', serif;
            transition: background 0.2s, color 0.2s;
        }
        .remove-btn:hover {
            background: #b2903e;
            color: #fff;
        }
        .submit-btn {
            background: #b2903e;
            color: #fff;
            border: none;
            border-radius: 6px;
            padding: 0.7rem 2.2rem;
            font-size: 1.15rem;
            font-family: 'Georgia', serif;
            font-weight: bold;
            margin-top: 1.5rem;
            transition: background 0.2s;
        }
        .submit-btn:hover {
            background: #a07d33;
        }
        .empty-cart {
            min-height: 50vh;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }
        .empty-cart-icon {
            font-size: 4rem;
            color: #b2903e;
            margin-bottom: 1rem;
        }
        .empty-cart-text {
            color: #7a6b52;
            font-size: 1.2rem;
            margin-bottom: 1.5rem;
            font-family: 'Georgia', serif;
        }
        .browse-btn {
            background: #1a2e4f;
            color: #fff;
            border: none;
            border-radius: 6px;
            padding: 0.7rem 1.5rem;
            font-size: 1.1rem;
            font-family: 'Georgia', serif;
            transition: background 0.2s;
        }
        .browse-btn:hover {
            background: #13203a;
        }
    </style>
{% endblock %}

{% block title %}My Cart{% endblock %}

{% block body %}
    <div class="container py-5 cart-container">
        <div class="cart-title">ðŸ›’ My Cart</div>
        <div class="cart-content">
            {% if items|length > 0 %}
                {% for item in items %}
                    <div class="cart-card">
                        <div class="cart-book-info">
                            <div class="cart-book-title">{{ item.getBook().getTitle() }}</div>
                            <div class="cart-book-author">by {{ item.getBook().getAuthorName() }}</div>
                            <div class="cart-book-barcode">Barcode: {{ item.getBarcode() }}</div>
                        </div>
                        <div class="book-actions">
                            <form action="{{ path('remove_from_cart', {'id': item.getBook().getId()}) }}" method="POST" class="d-inline">
                                <input type="hidden" name="_token" value="{{ csrf_token('remove_from_cart') }}">
                                <button type="submit" class="remove-btn">
                                    <i class="fas fa-trash"></i> Remove
                                </button>
                            </form>
                        </div>
                    </div>
                {% endfor %}
                <div class="text-center">
                    <form action="{{ path('submit_cart') }}" method="POST" class="d-inline">
                        <input type="hidden" name="_token" value="{{ csrf_token('submit_cart') }}">
                        <button type="submit" class="submit-btn">
                            <i class="fas fa-check"></i> Submit Request
                        </button>
                    </form>
                </div>
            {% else %}
                <div class="empty-cart">
                    <div class="empty-cart-icon"><i class="fas fa-shopping-cart"></i></div>
                    <div class="empty-cart-text">Your cart is empty</div>
                    <a href="{{ path('app_domains') }}" class="browse-btn">
                        <i class="fas fa-book"></i> Browse Books
                    </a>
                </div>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form[action="{{ path('submit_cart') }}"]');
        
        if (form) {
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const submitButton = form.querySelector('button[type="submit"]');
                submitButton.disabled = true;
                submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
                
                fetch(form.action, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    credentials: 'include'
                })
                .then(response => {
                    if (response.headers.get('content-type')?.includes('application/pdf')) {
                        // Handle PDF response
                        return response.blob().then(blob => {
                            const url = window.URL.createObjectURL(blob);
                            const a = document.createElement('a');
                            a.href = url;
                            a.download = 'request_receipt.pdf';
                            document.body.appendChild(a);
                            a.click();
                            window.URL.revokeObjectURL(url);
                            a.remove();
                            
                            // Redirect to home page after download
                            window.location.href = '{{ path('app_domains') }}';
                        });
                    } else {
                        // Handle JSON response (error case)
                        return response.json().then(data => {
                            throw new Error(data.message || 'An error occurred');
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert(error.message || 'An unexpected error occurred. Please try again.');
                    submitButton.disabled = false;
                    submitButton.innerHTML = '<i class="fas fa-check"></i> Submit Request';
                });
            });
        }
    });
</script>
{% endblock %}
