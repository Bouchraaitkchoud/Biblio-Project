{% extends 'base.html.twig' %}

{% block title %}Books in {{ section.name }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/styles.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        .cart-btn {
            position: relative;
            padding: 8px 15px;
        }
        .cart-count-badge {
            position: absolute;
            top: -8px;
            right: -8px;
            background: #dc3545;
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
        }
        .book-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="books-container">
        <div class="header-container">
            <h1 class="books-title">Books in {{ section.name }}</h1>
            <a href="{{ path('view_cart') }}" class="btn btn-primary cart-btn">
                <i class="fas fa-shopping-cart"></i>
                {% if app.user and app.user.carts|length > 0 %}
                    <span class="cart-count-badge">
                        {{ app.user.carts.last.books|length }}
                    </span>
                {% endif %}
            </a>
        </div>

        <ul class="books-list">
            {% for book in books %}
                <li class="book-item">
                    <div>
                        <span class="book-title">{{ book.title }}</span>
                        <span class="book-author">by {{ book.author }}</span>
                    </div>
                    
                    <form action="{{ path('add_to_cart', {'id': book.id}) }}" method="POST" class="add-to-cart-form">
                        <input type="hidden" name="_token" value="{{ csrf_token('add_to_cart') }}">
                        <button type="submit" class="btn btn-sm btn-outline-primary">
                            <i class="fas fa-cart-plus"></i> Add to Cart
                        </button>
                    </form>
                </li>
            {% else %}
                <li class="no-books">No books found in this section.</li>
            {% endfor %}
        </ul>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Intercept form submissions
            document.querySelectorAll('.add-to-cart-form').forEach(form => {
                form.addEventListener('submit', async function(e) {
                    e.preventDefault();
                    const button = this.querySelector('button');
                    const originalHtml = button.innerHTML;
                    
                    try {
                        // Show loading state
                        button.disabled = true;
                        button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';
                        
                        const response = await fetch(this.action, {
                            method: 'POST',
                            body: new FormData(this),
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest'
                            }
                        });
                        
                        const result = await response.json();
                        
                        if (result.success) {
                            // Success feedback
                            button.innerHTML = '<i class="fas fa-check"></i> Added!';
                            
                            // Update cart count badge
                            const cartCountBadge = document.querySelector('.cart-count-badge');
                            if (cartCountBadge) {
                                cartCountBadge.textContent = parseInt(cartCountBadge.textContent) + 1;
                            } else {
                                const cartBtn = document.querySelector('.cart-btn');
                                cartBtn.innerHTML += '<span class="cart-count-badge">1</span>';
                            }
                            
                            setTimeout(() => {
                                button.innerHTML = originalHtml;
                                button.disabled = false;
                            }, 2000);
                        } else {
                            button.innerHTML = originalHtml;
                            button.disabled = false;
                            alert('Error: ' + (result.message || 'Failed to add to cart'));
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        button.innerHTML = originalHtml;
                        button.disabled = false;
                        alert('Network error - please try again');
                    }
                });
            });
        });
    </script>
{% endblock %}