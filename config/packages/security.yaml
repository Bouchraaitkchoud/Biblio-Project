# security:
#     password_hashers:
#         Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
#     providers:
#         users_in_memory:
#             memory:
#                  users:
#                     user1:
#                         password: password123
#                         roles: ROLE_USER
#         app_user_provider:
#             entity:
#                 class: App\Entity\User
#                 property: email
#     firewalls:
#         dev:
#             pattern: ^/(_(profiler|wdt)|css|images|js)/
#             security: false
#         main:
#             lazy: true
#             provider: app_user_provider
#             stateless: false
#             entry_point: form_login
#             http_basic:
#                 realm: Secured Area
#             # json_login:
#             #     check_path: /api/login
#             #     username_path: email
#             #     password_path: password
#             form_login:
#                 login_path: app_login
#                 check_path: app_login
#                 enable_csrf: true
#             logout:
#                 path: app_logout
#                 target: app_homepage
#             # Replace "anonymous: true" with the following:
#             security: true
            
#     access_control:
#         - { path: ^/admin, roles: ROLE_ADMIN }
#         - { path: ^/profile, roles: ROLE_USER }
#         - { path: ^/student, roles: ROLE_STUDENT }

# when@test:
#     security:
#         password_hashers:
#             Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
#                 algorithm: auto
#                 cost: 4
#                 time_cost: 3
#                 memory_cost: 10
security:
    enable_authenticator_manager: true
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        # Define your user provider (e.g., from a database)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email # The field used to log in (e.g., email or username)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                default_target_path: app_domains
                enable_csrf: false
                success_handler: App\Security\LoginSuccessHandler
                # Ensure proper target path saving
                use_referer: true
                always_use_default_target_path: false
                target_path_parameter: _target_path
            logout:
                path: app_logout
                target: app_login
    access_control:
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/register, roles: PUBLIC_ACCESS }
        - { path: ^/receipt, roles: ROLE_USER } # Allow access to receipts for authenticated users
        - { path: ^/section/\d+/books, roles: ROLE_USER } # Allow access to the book page for authenticated users
        - { path: ^/admin, roles: ROLE_ADMIN } # Admin access rule needs to be before the catch-all rule
        - { path: ^/, roles: ROLE_USER } # Default rule for all other routes